<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="completable-futures"><sessioninfo id="testing-docker-a7e5f57e-4985-42fd-8df9-fa935485b075-f98afc24" start="1502871738390" dump="1502871740012"/><package name="com/spotify/futures"><class name="com/spotify/futures/CompletableFutures"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allAsList" desc="(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;" line="71"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="successfulAsList" desc="(Ljava/util/List;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;" line="104"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exceptionallyCompletedFuture" desc="(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;" line="122"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="joinList" desc="()Ljava/util/stream/Collector;" line="156"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkCompleted" desc="(Ljava/util/concurrent/CompletionStage;)V" line="167"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompleted" desc="(Ljava/util/concurrent/CompletionStage;)Ljava/lang/Object;" line="182"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getException" desc="(Ljava/util/concurrent/CompletionStage;)Ljava/lang/Throwable;" line="198"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleCompose" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;" line="234"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exceptionallyCompose" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;" line="260"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dereference" desc="(Ljava/util/concurrent/CompletionStage;)Ljava/util/concurrent/CompletionStage;" line="273"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/util/concurrent/CompletionStage;)Ljava/util/concurrent/CompletionStage;" line="278"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;" line="296"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Lcom/spotify/futures/Function3;)Ljava/util/concurrent/CompletionStage;" line="316"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Lcom/spotify/futures/Function4;)Ljava/util/concurrent/CompletionStage;" line="343"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combine" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Lcom/spotify/futures/Function5;)Ljava/util/concurrent/CompletionStage;" line="374"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineFutures" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;" line="402"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineFutures" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Lcom/spotify/futures/Function3;)Ljava/util/concurrent/CompletionStage;" line="429"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineFutures" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Lcom/spotify/futures/Function4;)Ljava/util/concurrent/CompletionStage;" line="462"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineFutures" desc="(Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Ljava/util/concurrent/CompletionStage;Lcom/spotify/futures/Function5;)Ljava/util/concurrent/CompletionStage;" line="497"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="poll" desc="(Ljava/util/function/Supplier;Ljava/time/Duration;Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/CompletableFuture;" line="536"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pollTask" desc="(Ljava/util/function/Supplier;Ljava/util/concurrent/CompletableFuture;)V" line="547"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$poll$10" desc="(Ljava/util/concurrent/ScheduledFuture;Ljava/lang/Object;Ljava/lang/Throwable;)V" line="539"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$poll$9" desc="(Ljava/util/function/Supplier;Ljava/util/concurrent/CompletableFuture;)V" line="538"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$combineFutures$8" desc="(Lcom/spotify/futures/Function5;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;" line="504"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$combineFutures$7" desc="(Lcom/spotify/futures/Function4;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;" line="468"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$combineFutures$6" desc="(Lcom/spotify/futures/Function3;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;" line="434"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$combineFutures$5" desc="(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;" line="406"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$combine$4" desc="(Lcom/spotify/futures/Function5;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Ljava/lang/Object;" line="382"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$combine$3" desc="(Lcom/spotify/futures/Function4;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Ljava/lang/Object;" line="349"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$combine$2" desc="(Lcom/spotify/futures/Function3;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Ljava/lang/Object;" line="321"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$successfulAsList$1" desc="(Ljava/util/function/Function;Ljava/util/concurrent/CompletionStage;)Ljava/util/concurrent/CompletionStage;" line="105"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$allAsList$0" desc="([Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Ljava/util/List;" line="77"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="525"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="93"/><counter type="COMPLEXITY" missed="0" covered="37"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/spotify/futures/Function3"><method name="andThen" desc="(Ljava/util/function/Function;)Lcom/spotify/futures/Function3;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThen$0" desc="(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/spotify/futures/Function4"><method name="andThen" desc="(Ljava/util/function/Function;)Lcom/spotify/futures/Function4;" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThen$0" desc="(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/spotify/futures/Function5"><method name="andThen" desc="(Ljava/util/function/Function;)Lcom/spotify/futures/Function5;" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$andThen$0" desc="(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Function5.java"><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Function4.java"><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Function3.java"><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompletableFutures.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="21" mb="0" cb="0"/><line nr="321" mi="0" ci="10" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="26" mb="0" cb="0"/><line nr="349" mi="0" ci="12" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="31" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="13" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="405" mi="0" ci="16" mb="0" cb="0"/><line nr="406" mi="0" ci="9" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="21" mb="0" cb="0"/><line nr="434" mi="0" ci="8" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="462" mi="0" ci="3" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="26" mb="0" cb="0"/><line nr="468" mi="0" ci="13" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="31" mb="0" cb="0"/><line nr="504" mi="0" ci="8" mb="0" cb="0"/><line nr="505" mi="0" ci="2" mb="0" cb="0"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="1" mb="0" cb="0"/><line nr="536" mi="0" ci="4" mb="0" cb="0"/><line nr="537" mi="0" ci="8" mb="0" cb="0"/><line nr="538" mi="0" ci="6" mb="0" cb="0"/><line nr="539" mi="0" ci="10" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="547" mi="0" ci="9" mb="0" cb="0"/><line nr="548" mi="0" ci="1" mb="0" cb="0"/><line nr="549" mi="0" ci="4" mb="0" cb="0"/><line nr="550" mi="0" ci="1" mb="0" cb="0"/><line nr="551" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="525"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="93"/><counter type="COMPLEXITY" missed="0" covered="37"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="573"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="99"/><counter type="COMPLEXITY" missed="0" covered="43"/><counter type="METHOD" missed="0" covered="39"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="0" covered="573"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="99"/><counter type="COMPLEXITY" missed="0" covered="43"/><counter type="METHOD" missed="0" covered="39"/><counter type="CLASS" missed="0" covered="4"/></report>